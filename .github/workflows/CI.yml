
name: CI
on:
  push:
    branches:
      - main
  pull_request:

env:
  CI: false
  tf_actions_working_dir: ./devops
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  TF_VAR_ali_access: ${{ secrets.ALICLOUD_ACCESS_KEY }}
  TF_VAR_ali_secret: ${{ secrets.ALICLOUD_SECRET_KEY }}
  TF_VAR_ali_region: "cn-shanghai"
  TF_VAR_ali_zone: "cn-shanghai-g"
  TF_VAR_domain_name: "yunjiaiot.cn"
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./devops
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14
      uses: actions/setup-node@v1
      with:
        node-version: 14
    - run: cd ../web/ && yarn && yarn run build
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.1
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color

    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          
          <details><summary>Show Plan</summary>
          
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve

    - uses: manyuanrong/setup-ossutil@v2.0
      with:
        endpoint: "oss-cn-shanghai.aliyuncs.com"
        access-key-id: ${{ secrets.ALICLOUD_ACCESS_KEY }}
        access-key-secret: ${{ secrets.ALICLOUD_SECRET_KEY }}
    - run: cd ../web/build && ossutil cp -rf . oss://bucket-website-foo2-yunjiaiot-cn
    